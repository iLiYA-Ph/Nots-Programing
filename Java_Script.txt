تبدیل نوع :

String()

Number()

Boolean()
-----------------------------------
انواع چاپ در جاوا اسکریپت :

document.write()

window.alert()

console.log()
-----------------------------------
رویداد کلیک باتن در جاوا اسکریپت :
نام باتن.onclick = function(){}
-----------------------------------
تغییر استایل در جاوا اکریپت :
نام المنت.style.backgroundcolor= 'red'.....
-----------------------------------
break : حلقه را میشکند 
continue : برمیگردد به حلقه و کد های بعد ان تکرار نمیشوند
-----------------------------------
========ارایه ها :
pop() : اخرین مقدار ارایه را برمیدارد و میتواند ان را در متغیری بریزد
push() : یک مقدار جدید به ارایه اضافه میکند و طول جدید ارایه را برمیگرداند
shift() : مقدار اول ارایه را حذف میکند و ان را برمیگرداند میتوان مقدار ان را در متغیری ریخت
unshift() : مقداری که در پرانتز ان قرار گرفته باشد را در اولین ایندکس ارایه اضافه میکند
روش دیگری برای افزودن مقدار جدید به ارایه : 
نام ارایه[نام ارایه.length] = مقدار اخرین ایندکس
delete نام ارایه[index array] : دیلیت کردن مقدار ارایه 
برای متصل یا ادغام کردن دو یا سه ارایه به همدیگر :
array1.concat(array2, array3); = ادغام کردن ارایه ها

array1.splice(2) : این متد ایندکس های 2 به بعد را حذف میکند
array1.splice(2 , 3, 'hello', 'how', 'hi') : از ایندکس 2 . فقط 3 ایندکس بعدی را حذف میکند و میتوان مقادیری برای جایگزین به ان داد

var array1 = array2.slice(2) : این متد از ایندکس 2 به بعد را کپی میکند و مقدار ان را در ارایه برمیگرداند
var array1 = array2.slice(2, 3) : این متد از ایندکس 2 تا قبل ایندکس 3 را کپی میکند...و

array1.sort() : مرتب کردن بر اساس حروف الفبا 
array1.reverse() : برعکس کردن ترتیب ایندکس ها

array1.indexOf() : پیدا کردن یک مقدار در ارایه (اگر وجود نداشته باشد -1 را نشان میدهد و اگر وجود داشته باشد شماره ایندکس ان را بر میگرداند)
array1.lastIndexOf() : ایندکس اخرین مقدار مشخص شده را برمیگرداند
-----------------------------------
فانکشن ها در جاوا اسکریپت: ("function declaration") :
function نام تابع (){
	دستورات
}
===================================
("function expression") :
var نام تابع = function(){
	دستورات
}
----------------------------------
("arrow function"):
var نام تابع = (parametr یا همان ورودی) => دستورات
اگر دستورات بیشتر از یک خط شود داخل اکولاد {} قرار میدهیم
----------------------------------
متغییر های (let & const) اگر در یک بلاک تعریف شوند . در خارج ان بلاک قابل شناسایی نیستند
به بین اکولاد باز و بسته {} یک بلاک گفته میشود
-----------------
فعال کردن حالت سختگیرانه در کد نویسی : نوشتن این کد در دبل یا سینگل کوتیشن در محدوده یا اسکوپ مورد نظر : "use strict";
---------------------------------------
ابجکت ها در جاوا اسکریپت : 
تعریف ابجکت :
const نام ابجکت = {
	key1 :  value1,
	key2 :  value2,
	key3 :  value3
}
مثال :
const human = {
    FirstName : 'iLiYA',
    LastName : 'Porhosein',
    age : 18,
    printf : function(str){
        console.log(str)
    }
}
console.log(human.FirstName, human['age']);
human.printf(443)
ابجکت های تو در تو : grades یک ابجکت از لیست نمرات هست
const human = {
    FirstName : 'iLiYA',
    LastName : 'Porhosein',
    age : 18,
    grades : {
	math : 16,
	arabic : 18,
	sport : 20,
	geometry : 17
    }
}
نحوه صدا زدن ابجکت تو در تو :
console.log(human.grades.math);
اضافه کردن متد یا پراپرتی جدید در ابجکت : 
object_name.proprty_name = value;
------------------------------------------------------
حلقه ی for-of : این حلقه به تعداد طول های ارایه1 تکرار میشود و هر بار مقدارش را در المنت میریزد
for(let element of array1){
	دستورات
}
-------------------------------------------------------
کپی سطحی از ابجکت ها : 
let object1 = {...object2}
کپی عمیق از ابجکت ها : 
let object1 = JSON.parse(JSON.stringify(object2))
----------------------forEach---------------------------------
نحوه کار کردن با فور ایچ : در اضای هر ایندکس ارایه یکبار فانکشن درون فور ایچ اجرا میشود
array.forEach(function(item){
	دستورات
})
----------------------Map-------------------------------------
متد مپ هم مثل فور ایچ است با این تفاووت که متد مپ میتواند مقداری را ریترن کند و در متغیری بریزد : gg مثل مثال دوم : 
مثال اول :
array1.map(function(item){
	دستورات
})
مثال دوم : 
var numbers = array1.map(function(item){
	دستورات	
})
--------------------------تبدیل حروف کوچک به بزرگ------------toUpperCase()------------
str = 'iliya'
console.log(str.toUpperCase())
=========
Outpot : ILIYA
-----------------------------------------------------------------------------

